@model TicketManagement.Models.tblaccount

@{
    ViewBag.Title = "Creat New";
}
<br />
<br />
<h2>Create Account</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group input-group mb-3">
            @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Username", } })
                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })


            </div>
        </div>

        <div class="input-group mb-3">
            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", type = "password", placeholder = "" } })
                <div class="col-md-10">
                    <input type="checkbox" onchange="document.getElementById('password').type = this.checked ? 'text' : 'password'">
                    Show password
                </div>
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger , error" })
            </div>
        </div>

        <div class="form-group input-group mb-3">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Your LastName" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group input-group mb-3">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "Your FirstName" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group input-group mb-3">
            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control", placeholder = "Your Middle Name" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group input-group mb-3">
            @Html.LabelFor(model => model.usertype, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 ">

                @*<button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false"> DropDown List sample
                    </button>*@

                @Html.DropDownList("usertype", new List<SelectListItem>
          { new SelectListItem { Text = "Administrator", Value = "Administrator", Selected=false},
            new SelectListItem { Text = "Technical", Value = "Technical"},
            new SelectListItem { Text = "User", Value = "User"},

            }, new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.usertype, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group input-group mb-3">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("status", new List<SelectListItem>
         { new SelectListItem { Text = "Active", Value = "Active", Selected=true},
           new SelectListItem { Text = "Inactive", Value = "Inactive"},
           }, new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group input-group mb-3">
            @Html.LabelFor(model => model.department, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("department", new List<SelectListItem>
          { new SelectListItem { Text = "Computer Science", Value = "Computer Science", Selected=false},
            new SelectListItem { Text = "Education", Value = "Education"},
            new SelectListItem { Text = "Business Administrator", Value = "Business Administrator"},
            new SelectListItem { Text = "BS Accountancy", Value = "BS Accountancy"},
            new SelectListItem { Text = "Political Science", Value = "Political Science"},
            new SelectListItem { Text = "Radtech", Value = "Radtech"},
            new SelectListItem { Text = "AB Psychology", Value = "AB Psychology"},
            new SelectListItem { Text = "BS Psychology", Value = "BS Psychology"},
            new SelectListItem { Text = "Medtech", Value = "Medtech"},
            new SelectListItem { Text = "Midwifery", Value = "Midwifery"},
            }, new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.department, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group input-group mb-3">
            @Html.LabelFor(model => model.branch, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">


                @Html.DropDownList("branch", new List<SelectListItem>
          { new SelectListItem { Text = "J.Sumulong", Value = "J.Sumulong", Selected=false},
            new SelectListItem { Text = "J.Abad Santos", Value = "J.Abad Santos"},
            new SelectListItem { Text = "A.Mabini", Value = "A.Mabini"},
            new SelectListItem { Text = "Plaridel", Value = "Plaridel"},
            new SelectListItem { Text = "E.Esguerra", Value = "E.Esguerra"},
            new SelectListItem { Text = "J.Rizal", Value = "J.Rizal"},
            new SelectListItem { Text = "A.Bonifacio", Value = "A.Bonifacio"},

            }, new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.branch, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">

                <button type="submit" class="btn btn-success" value="Create" data-toggle="modal" data-target="#id">
                    Create
                </button>
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    function UserCheck() {
        $("#Status").html("Checking...");
        $.post("@Url.Action("CheckUsernameAvailability", "Home")",
            {
                userdata: $("#usename").val()
            },
        function (data) {
            if (data == 0) {
                $("#Status").html('<font color="Green">Available !. you can take it.</font>');
                $("#username").css("border-color", "Green");

            }
            else {
                $("#Status").html('<font color="Red">That name is taken.Try Another.</font>');
                $("#username").css("border-color", "Red");
            }
        });
    }
</script>